<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
				  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.zerock.mapper.BoardMapper">
	<!--
	<select id="getListWithPaging" resultType="org.zerock.domain.BoardVO">
		<![CDATA[
			select bno, title, content, writer, regdate, updatedate from 
			(select /*+ index_desc(tbl_board pk_board) */ 
			rownum rn, bno, title, content, writer, regdate, updatedate 
			from tbl_board where rownum <= #{pageNum} * #{amount}) 
			where rn > (#{pageNum} -1) * #{amount}
		]]>
	</select>
	-->
	<!-- Criteria.java의 pageNum, amount -->
	<!-- 검색기능을 추가하기 위하여 주석처리 -->
	
	<!-- sql tag로 query의 일부를 별도로 보관하고 include하여 사용할 수 있다.
	include 시에는 ID를 Reference하여 사용하게 된다 -->
	<sql id="criteria">
		<trim prefix="(" suffix=") and" prefixOverrides="or">
			<foreach item="type" collection="typeArr">
				<trim prefix="or">
					<choose>
						<when test="type == 'T'.toString()">
							title like '%'||#{keyword}||'%'
						</when>
						<when test="type == 'C'.toString()">
							content like '%'||#{keyword}||'%'
						</when>
						<when test="type == 'W'.toString()">
							writer like '%'||#{keyword}||'%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>
	
	<select id="getListWithPaging" resultType="org.zerock.domain.BoardVO">
		<!-- Page 483에서 추가된 replycnt column을 가져올 수 있도록 구문 추가 -->
		<![CDATA[
			select bno, title, content, writer, regdate, updatedate, replycnt from 
			(select /*+ index_desc(tbl_board pk_board) */ 
			rownum rn, bno, title, content, writer, regdate, updatedate, replycnt 
			from tbl_board
			where
		]]>
		
		<include refid="criteria"/>
		
		<![CDATA[
			rownum <= #{pageNum} * #{amount})
			where rn > (#{pageNum} - 1) * #{amount}
		]]>
	</select>
	<!-- Page 335. MyBatis 동적 query를 활용한 검색 조건 확인 절차 -->
	
	<!--
	where([or -> overridden by outer trim tag]title like...
	or content like... or writer like...) and rownum <= ...)
	where rn > ... 과 같은 형태가 됨. 
	type parameter가 입력되지 않는 경우 foreach tag 자체가 실행이 되지 않아
	내용이 존재하지 않으므로 trim의 prefix와 suffix가 무시되어
	where rownum <= ...과 같은 형태가 된다
	-->
	
	<!-- MyBatis에서는 원하는 속성을 찾을 때에 getTypeArr()와 같은
	이름에 기반하기 때문에 Criteria에 존재하는 getTypeArr() method와 
	typeArr 속성명을 맞춰줌.
	MyBatis에서는 Java Beans 보다는 get/set Method를 참조한다
	choose 구문에서는 'or title... or content... or writer...'
	와 같은 구문을 생성하게 되는데, 바깥쪽의 trim을 이용하여 맨 앞에 생성되는 or
	를 없애줌 -->

	<select id="getList2" resultType="org.zerock.domain.BoardVO">
	<!-- MyBatis xml file 작성 시 mapper tag의 namespace 속성을 Mapper
	interface의 경로로 지정해야 하며 select tag의 id 속성값은 method의 이름과 일치해야 
	함. resultType의 속성은 select query의 결과를 설정한 class의 객체로 생성하기 위해
	해당 경로로 설정 -->
	<![CDATA[
		select * from tbl_board where bno > 0
	]]>
	<!-- CDATA(CharactorData)는 XML에서 부등호를 사용하기 위해 작성.
	XML에서는	'<', '>'를 tag로 인식함 -->
	</select>
	
	<insert id="insert">
		insert into tbl_board(bno, title, content, writer) values(seq_board.nextval, #{title}, #{content}, #{writer})
	</insert>
	<!-- Primary Key의 값을 알 필요가 없는 경우. insert query만 실행 -->
	
	<insert id="insertSelectKey">
		<selectKey keyProperty="bno" order="BEFORE" resultType="long">
			select seq_board.nextval from dual
		</selectKey>
		insert into tbl_board(bno, title, content, writer) values(#{bno}, #{title}, #{content}, #{writer})
	</insert>
	<!-- Primary Key의 값을 알아야 하는 경우. select문을 실행하고나서 bno값을 저장한 후
	저장한 값을 대입하여 insert query 실행 -->
	<!-- MyBatis는 JDBC의 PreparedStatement를 활용하기 때문에 parameter를 
	처리하는 ?에 대한 치환을 #{attribute}를 통해 처리함 -->
	
	<select id="read" resultType="org.zerock.domain.BoardVO">
		select * from tbl_board where bno = #{bno}
	</select>
	
	<delete id="delete">
		delete from tbl_board where bno = #{bno}
	</delete>
	
	<update id="update">
		update tbl_board set title = #{title}, content = #{content}, writer = #{writer}, updateDate = sysdate where bno = #{bno}
		<!-- updateDate를 sysdate(실시간)으로 설정.
		 regdate는 등록 시간이므로 바꾸지 않는다 -->
		 <!-- #{} parameter들은 BoardVO 객체의 getter를 통해 대입한다 -->
	</update>
	
	<!-- 전체 data 수를 구하는 query -->
	<!--
	<select id="getTotalCount" resultType="int">
		select count(*) from tbl_board where bno > 0
	</select>
	-->
	
	<!-- Page 338 목록, 데이터 개수 처리 -->
	
	<!-- 상단의 getListWithPaging query에도 include를 사용할 수 있음 -->
	<select id="getTotalCount" resultType="int">
		select count(*) from tbl_board
		where
		<include refid="criteria"/>
		bno > 0
	</select>
	
	<!-- Page 483. replyCnt Updater -->
	<update id="updateReplyCnt">
		update tbl_board set replycnt = replycnt + #{amount} where bno = #{bno}
	</update>
	
</mapper>